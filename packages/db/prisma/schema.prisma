// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
    id             String      @id @default(uuid())
    createdAt      DateTime    @default(now())
    email          String      @unique
    name           String
    organizationID String      @unique
    organization   Organization[]
    scheduledDays  DateTime[]
    role           Roles?
    approvedDays   WhoApproved[]
    daysOffNumber  Int?
    
    // TODO:
    //     ~ 1) Organization ID
    //     ~ 2) Days cheduled to work (Array)
    //     ~ 3) roles
    //     ~ 4) who approved the day off
    //     ~ 5) Time and Date that the request was approved
    //     ~ 6) How many days they have off
}

model Organization{
    id                  String      @id @default(uuid())
    name                String
    employeeIDs         String[]
    datesNotToBeWorked  DaysNotToBeWorked[]
    employee            Employee[]
    datesRequestedOff   DaysRequestedOff
    paidTimeOff         PTO




    // TODO: might need an array of objects:
    //      ~ 1) Employee IDs
    //      ~ 2) Dates are not to be worked. ie holidays, some other things that might come up, maybe link
    //          these with a string of some decription
    //      ~ 3) days that are being requested off and by who
    //      ~ 4) employee IDs that are working, we can assume that if you are not scheduled you dont work 
    //          that day
    //      ~ 5) PTO( Paied time off )
}


model WhoApproved{
  id            String      @id @default(uuid())
  approvedByID  String
  approvedForID String
  date          DateTime
  employee      Employee @relation(fields: [approvedByID], references: [id])
  
}

model DaysNotToBeWorked{
  id            String      @id @default(uuid())
  date          DateTime
  description   String
  orgID          String
  organization  Organization @relation(fields: [orgID], references: [id])
}

model EmployeesWorking{
  id            String      @id @default(uuid())
  date          String
  employeeID    String
}

model DaysRequestedOff{
  id            String      @id @default(uuid())
  employeeID    String
  dayOff        DateTime
  approvedByID  String
}


model PTO{
  id            String      @id @default(uuid())
  employeeID    String
  dayOff        DateTime
  approvedByID  String
  reason        String?
}

enum Roles{
  EMPLOYEE
  MANAGER
  OWNER
  ASSISTANT_MANAGER
}